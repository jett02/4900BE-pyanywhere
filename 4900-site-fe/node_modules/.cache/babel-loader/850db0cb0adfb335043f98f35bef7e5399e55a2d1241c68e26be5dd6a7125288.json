{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from './router';\nimport { APIService } from './http/APIService';\nconst apiService = new APIService();\nexport default {\n  name: 'App',\n  data: () => ({\n    authenticated: false,\n    dialog: false,\n    menu: [{\n      title: 'Home',\n      url: \"/\"\n    }, {\n      title: 'Menu',\n      url: \"/menu\"\n    }]\n  }),\n  mounted() {\n    if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n      this.authenticated = true;\n    } else {\n      this.authenticated = false;\n    }\n    if (this.authenticated === true) {\n      apiService.getCustomerList().then(response => {\n        this.authenticated = true;\n      }).catch(error => {\n        if (error.response.status === 401) {\n          localStorage.clear();\n          localStorage.setItem(\"isAuthenticated\", false);\n          this.authenticated = false;\n        }\n      });\n    }\n  },\n  methods: {\n    getUser() {\n      if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n        this.validUserName = JSON.parse(localStorage.getItem(\"log_user\"));\n      }\n    },\n    logout() {\n      //clear local storage items and set authenticated to false\n      localStorage.clear();\n      localStorage.setItem(\"isAuthenticated\", false);\n      this.authenticated = false;\n      window.location = \"/\";\n    },\n    login() {\n      router.push(\"/auth\");\n    },\n    home() {\n      window.location = \"/\";\n    },\n    register() {\n      router.push(\"/register\");\n    }\n  }\n};","map":{"version":3,"names":["router","APIService","apiService","name","data","authenticated","dialog","menu","title","url","mounted","localStorage","getItem","JSON","parse","getCustomerList","then","response","catch","error","status","clear","setItem","methods","getUser","validUserName","logout","window","location","login","push","home","register"],"sources":["C:\\Users\\jphus\\PycharmProjects\\4900-Site-BE\\4900-site-fe\\src\\App.vue"],"sourcesContent":["<template>\r\n  <ul class=\"nav justify-content-end\">\r\n     <div class=\"SB\"><emp>Smokey's Barbeque </emp></div>\r\n     <li class=\"nav-item active\">\r\n         <router-link to=\"/\">Home</router-link> |\r\n     </li>\r\n     <li class=\"nav-item\">\r\n         <router-link :to=\"{name: 'Menu'}\">Menu</router-link> |\r\n     </li>\r\n     <li class=\"nav-item\" v-if=\"!authenticated\" @click=\"register\" >\r\n         <router-link :to=\"{name: 'Register'}\">Register</router-link> |\r\n     </li>\r\n     <li class=\"nav-item\" v-if=\"!authenticated\" @click=\"login\" >\r\n         <router-link :to=\"{name: 'Auth'}\">Log in</router-link>\r\n     </li>\r\n     <li class=\"nav-item  .justify-content-end\" v-if=\"authenticated\" @click=\"logout\" >\r\n         <router-link :to=\"{name: 'Auth'}\">Logout</router-link>\r\n     </li>\r\n </ul>\r\n <router-view/>\r\n</template>\r\n<script>\r\n import router from './router';\r\n import {APIService} from './http/APIService';\r\n const apiService = new APIService();\r\n\r\n export default {\r\n     name: 'App',\r\n     data: () => ({\r\n         authenticated: false,\r\n         dialog: false,\r\n         menu: [\r\n             { title: 'Home', url:\"/\"},\r\n             { title: 'Menu', url:\"/menu\" },\r\n         ]\r\n     }),\r\n     mounted() {\r\n       if (localStorage.getItem(\"isAuthenticated\") &&\r\n           JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true ){\r\n           this.authenticated = true\r\n       }else {\r\n           this.authenticated = false\r\n       }\r\n       if(this.authenticated === true) {\r\n         apiService.getCustomerList().then(response => {\r\n             this.authenticated = true;\r\n         }).catch(error => {\r\n             if (error.response.status === 401) {\r\n               localStorage.clear();\r\n               localStorage.setItem(\"isAuthenticated\", false);\r\n               this.authenticated = false;\r\n             }\r\n         });\r\n       } \r\n     },\r\n     methods: {\r\n       getUser() {\r\n           if (localStorage.getItem(\"isAuthenticated\") &&\r\n            JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true\r\n           ) {\r\n            this.validUserName = JSON.parse(localStorage.getItem(\"log_user\"));\r\n            } \r\n       },\r\n         logout() {\r\n           //clear local storage items and set authenticated to false\r\n           localStorage.clear();\r\n           localStorage.setItem(\"isAuthenticated\", false);\r\n           this.authenticated = false;\r\n           window.location = \"/\";\r\n         },\r\n         login() {\r\n             router.push(\"/auth\");\r\n         },\r\n         home() {\r\n           window.location = \"/\";\r\n           },\r\n       register() {\r\n           router.push(\"/register\");\r\n       }\r\n   }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n #app {\r\n     font-family: Avenir, Helvetica, Arial, sans-serif;\r\n     -webkit-font-smoothing: antialiased;\r\n     -moz-osx-font-smoothing: grayscale;\r\n     text-align: center;\r\n     color: black;\r\n }\r\n #nav {\r\n     padding: 30px;\r\n     background-color: #442027;\r\n     a {\r\n         font-weight: bold;\r\n         color: #FFF4C3;\r\n         &.router-link-exact-active {\r\n             color: #FFF4C3;\r\n         }\r\n     }\r\n }\r\n .nav {\r\n     padding: 1em;\r\n     background-color: #442027;\r\n     \r\n     li {\r\n         font-weight: bold;\r\n         color: #FFF4C3;\r\n     }\r\n     a {\r\n         color: #FFF4C3;\r\n         padding: .5em;\r\n\r\n         &.router-link-exact-active {\r\n             color: #FFF4C3;\r\n         }\r\n     }\r\n     .SB{\r\n         margin-right: 45em;\r\n         font-size: medium;\r\n         color: #FFF4C3\r\n     }\r\n }\r\n</style>"],"mappings":";AAsBC,OAAOA,MAAK,MAAO,UAAU;AAC7B,SAAQC,UAAU,QAAO,mBAAmB;AAC5C,MAAMC,UAAS,GAAI,IAAID,UAAU,CAAC,CAAC;AAEnC,eAAe;EACXE,IAAI,EAAE,KAAK;EACXC,IAAI,EAAEA,CAAA,MAAO;IACTC,aAAa,EAAE,KAAK;IACpBC,MAAM,EAAE,KAAK;IACbC,IAAI,EAAE,CACF;MAAEC,KAAK,EAAE,MAAM;MAAEC,GAAG,EAAC;IAAG,CAAC,EACzB;MAAED,KAAK,EAAE,MAAM;MAAEC,GAAG,EAAC;IAAQ,CAAC;EAEtC,CAAC,CAAC;EACFC,OAAOA,CAAA,EAAG;IACR,IAAIC,YAAY,CAACC,OAAO,CAAC,iBAAiB,KACtCC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,MAAM,IAAG,EAAG;MAC9D,IAAI,CAACP,aAAY,GAAI,IAAG;IAC5B,CAAC,MAAK;MACF,IAAI,CAACA,aAAY,GAAI,KAAI;IAC7B;IACA,IAAG,IAAI,CAACA,aAAY,KAAM,IAAI,EAAE;MAC9BH,UAAU,CAACa,eAAe,CAAC,CAAC,CAACC,IAAI,CAACC,QAAO,IAAK;QAC1C,IAAI,CAACZ,aAAY,GAAI,IAAI;MAC7B,CAAC,CAAC,CAACa,KAAK,CAACC,KAAI,IAAK;QACd,IAAIA,KAAK,CAACF,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE;UACjCT,YAAY,CAACU,KAAK,CAAC,CAAC;UACpBV,YAAY,CAACW,OAAO,CAAC,iBAAiB,EAAE,KAAK,CAAC;UAC9C,IAAI,CAACjB,aAAY,GAAI,KAAK;QAC5B;MACJ,CAAC,CAAC;IACJ;EACF,CAAC;EACDkB,OAAO,EAAE;IACPC,OAAOA,CAAA,EAAG;MACN,IAAIb,YAAY,CAACC,OAAO,CAAC,iBAAiB,KACzCC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,MAAM,IAAG,EAC1D;QACD,IAAI,CAACa,aAAY,GAAIZ,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;MACjE;IACL,CAAC;IACCc,MAAMA,CAAA,EAAG;MACP;MACAf,YAAY,CAACU,KAAK,CAAC,CAAC;MACpBV,YAAY,CAACW,OAAO,CAAC,iBAAiB,EAAE,KAAK,CAAC;MAC9C,IAAI,CAACjB,aAAY,GAAI,KAAK;MAC1BsB,MAAM,CAACC,QAAO,GAAI,GAAG;IACvB,CAAC;IACDC,KAAKA,CAAA,EAAG;MACJ7B,MAAM,CAAC8B,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IACDC,IAAIA,CAAA,EAAG;MACLJ,MAAM,CAACC,QAAO,GAAI,GAAG;IACrB,CAAC;IACLI,QAAQA,CAAA,EAAG;MACPhC,MAAM,CAAC8B,IAAI,CAAC,WAAW,CAAC;IAC5B;EACJ;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}